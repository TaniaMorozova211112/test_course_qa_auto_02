{"name": "test_delete_user", "status": "broken", "statusDetails": {"message": "psycopg2.OperationalError: could not translate host name \"postgres-db\" to address: No such host is known.", "trace": "@pytest.fixture(scope=\"module\")\n    def db_connection():\n        \"\"\"\n        Створює підключення до PostgreSQL на час виконання тестів модуля.\n        Після завершення закриває його.\n        \"\"\"\n>       conn = psycopg2.connect(\n            dbname=\"testdb\",\n            user=\"postgres\",\n            password=\"postgres\",\n            host=\"postgres-db\",\n            port=\"5433\"\n        )\n\nconftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndsn = 'dbname=testdb user=postgres password=postgres host=postgres-db port=5433', connection_factory = None\ncursor_factory = None, kwargs = {'dbname': 'testdb', 'host': 'postgres-db', 'password': 'postgres', 'port': '5433', ...}\nkwasync = {}\n\n    def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n        \"\"\"\n        Create a new database connection.\n    \n        The connection parameters can be specified as a string:\n    \n            conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n    \n        or using a set of keyword arguments:\n    \n            conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n    \n        Or as a mix of both. The basic connection parameters are:\n    \n        - *dbname*: the database name\n        - *database*: the database name (only as keyword argument)\n        - *user*: user name used to authenticate\n        - *password*: password used to authenticate\n        - *host*: database host address (defaults to UNIX socket if not provided)\n        - *port*: connection port number (defaults to 5432 if not provided)\n    \n        Using the *connection_factory* parameter a different class or connections\n        factory can be specified. It should be a callable object taking a dsn\n        argument.\n    \n        Using the *cursor_factory* parameter, a new default cursor factory will be\n        used by cursor().\n    \n        Using *async*=True an asynchronous connection will be created. *async_* is\n        a valid alias (for Python versions where ``async`` is a keyword).\n    \n        Any other keyword parameter will be passed to the underlying client\n        library: the list of supported parameters depends on the library version.\n    \n        \"\"\"\n        kwasync = {}\n        if 'async' in kwargs:\n            kwasync['async'] = kwargs.pop('async')\n        if 'async_' in kwargs:\n            kwasync['async_'] = kwargs.pop('async_')\n    \n        dsn = _ext.make_dsn(dsn, **kwargs)\n>       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       psycopg2.OperationalError: could not translate host name \"postgres-db\" to address: No such host is known.\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\psycopg2\\__init__.py:122: OperationalError"}, "description": "\n    Тест видалення користувача.\n    ", "start": 1756840572829, "stop": 1756840572829, "uuid": "f1a69f9f-56e7-4c15-bf2f-42ce7e721d5c", "historyId": "490dde754dd958b3af236363552bc533", "testCaseId": "490dde754dd958b3af236363552bc533", "fullName": "lesson_30.test_users#test_delete_user", "labels": [{"name": "feature", "value": "User management - Delete"}, {"name": "parentSuite", "value": "lesson_30"}, {"name": "suite", "value": "test_users"}, {"name": "host", "value": "DESKTOP-QH2MVCU"}, {"name": "thread", "value": "30360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson_30.test_users"}], "titlePath": ["lesson_30", "test_users.py"]}